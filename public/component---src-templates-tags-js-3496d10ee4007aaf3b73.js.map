{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","style","display","flexDirection","paddingTop","alignItems","fontSize","color","height","width","borderRadius","backgroundColor","justifyContent","marginLeft","fontWeight","lineHeight","map","node","slug","fields","title","frontmatter","key","to","pageQuery"],"mappings":"2FAAA,kGA2DeA,UAtDF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAS,KAAQJ,EACvB,OACE,kBAAC,IAAD,KACE,yBAAKK,MAAO,CAACC,QAAS,OAAOC,cAAe,MAAOC,WAAW,GAAIC,WAAW,WAC3E,0BAAMJ,MAAO,CACXK,SAAU,GACVJ,QAAS,OACTK,MAAM,qBACJP,GACJ,yBAAKC,MAAO,CAACC,QAAS,OAAOM,OAAQ,OAAQC,MAAO,OAAQC,aAAc,OAAQC,gBAAiB,UAAWC,eAAgB,SAAUP,WAAW,SAAUQ,WAAY,QACvK,0BAAMZ,MAAO,CAACC,QAAS,OAAOK,MAAO,UAAWO,WAAW,MAAOC,WAAY,OAAQT,SAAU,SAAUP,KAG9G,6BACGD,EAAMkB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAE,EAAUH,EAAKI,YAAfD,MACR,OACE,uBAAGE,IAAKJ,GACN,kBAAC,OAAD,CAAMK,GAAIL,GAAOE,UAiCxB,IAAMI,EAAS","file":"component---src-templates-tags-js-3496d10ee4007aaf3b73.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `# ${tag}`\n  return (\n    <Layout>\n      <div style={{display: 'flex',flexDirection: 'row', paddingTop:48, alignItems:'center'}}>\n        <span style={{\n          fontSize: 24,\n          display: 'flex',\n          color:'var(--titleText)'\n        }}>{tagHeader}</span>\n        <div style={{display: 'flex',height: '22px', width: '22px', borderRadius: '11px', backgroundColor: '#b3d7ff', justifyContent: 'center', alignItems:'center', marginLeft: '8px'}}>\n          <span style={{display: 'flex',color: '#187bff', fontWeight:'500', lineHeight: '16px', fontSize: '16px'}}>{totalCount}</span>\n        </div>\n      </div>\n      <div>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <p key={slug}>\n              <Link to={slug}>{title}</Link>\n            </p>\n          )\n        })}\n      </div>\n\n      {/*<Link to=\"/tags\">All tags</Link>*/}\n    </Layout>\n  )\n}\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\nexport default Tags\nexport const pageQuery = graphql`\n  query ($tag: String) {\n  allMarkdownRemark(limit: 2000, sort: {fields: [frontmatter___date], order: DESC}, filter: {frontmatter: {tags: {in: [$tag]}, lock: {ne: true}}}) {\n    totalCount\n    edges {\n      node {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n}\n\n`"],"sourceRoot":""}