{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","renderWriter","model","description","type","style","styles","writer","renderPost","node","title","frontmatter","fields","slug","boxShadow","color","to","key","header","src","fontSize","fontWeight","marginTop","rhythm","articleLine","marginBottom","articleInfo","this","date","tags","length","map","tag","tagBody","dangerouslySetInnerHTML","__html","excerpt","render","data","props","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","location","height","React","Component","display","flexDirection","alignItems","flexWrap","marginLeft","backgroundColor","borderRadius","paddingLeft","paddingRight","marginRight","width","pageQuery"],"mappings":"yNAOMA,E,wLACJC,aAAA,SAAaC,GACX,OACGA,GACAA,EAAMC,aACND,EAAME,MACQ,YAAfF,EAAME,KAIC,0BAAMC,MAAOC,EAAOC,QAASL,EAAMC,YAAc,SAFjD,M,EAKXK,WAAA,SAAWC,GACT,IAAMC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,MAA4B,SAAzBJ,EAAKE,YAAYP,KAEhB,kBAAC,OAAD,CACEC,MAAO,CAAES,UAAU,OAASC,MAAO,oBACnCC,GAAIP,EAAKG,OAAOC,MAElB,6BAASI,IAAKR,EAAKG,OAAOC,MACxB,4BAAQR,MAAOC,EAAOY,QACpB,yBAAKC,IAAKV,EAAKE,YAAYR,eAE7B,uBAAGE,MAAO,CACRe,SAAU,GACVL,MAAO,qBACPM,WAAY,eACZC,UAAWC,YAAO,EAAI,KAErBb,GAEH,yBAAKL,MAAOC,EAAOkB,gBAMrB,6BAASP,IAAKR,EAAKG,OAAOC,MACxB,4BAAQR,MAAOC,EAAOY,QACpB,wBACEb,MAAO,CACLoB,aAAcF,YAAO,KACrBH,SAAU,gBACVC,WAAY,kBAGd,kBAAC,OAAD,CACEhB,MAAO,CAAES,UAAU,OAASC,MAAO,oBACnCC,GAAIP,EAAKG,OAAOC,MAEfH,IAGL,yBAAKL,MAAOC,EAAOoB,aAChBC,KAAK1B,aAAaQ,EAAKE,aACxB,2BAAON,MAAO,CAAEU,MAAO,oBACpBN,EAAKE,YAAYiB,MAGlBnB,EAAKE,YAAYkB,MAAQpB,EAAKE,YAAYkB,KAAKC,OAAO,GAAKrB,EAAKE,YAAYkB,KAAKE,KAAI,SAAAC,GAAG,OACtF,yBAAK3B,MAAOC,EAAO2B,SAAUD,QAKV,YAA1BvB,EAAKE,YAAYP,MAChB,iCACE,uBACE8B,wBAAyB,CACvBC,OAAQ1B,EAAKE,YAAYR,aAAeM,EAAK2B,SAE/C/B,MAAO,CACLe,SAAU,GACVL,MAAO,qBACPM,WAAY,eACZC,UAAWC,YAAO,EAAI,OAK9B,yBAAKlB,MAAOC,EAAOkB,gB,EAK3Ba,OAAA,WAAU,IAAD,OACCC,EAASX,KAAKY,MAAdD,KACFE,EAAYF,EAAKG,KAAKC,aAAahC,MACnCiC,EAAQL,EAAKM,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUnB,KAAKY,MAAMO,SAAUpC,MAAO8B,GAC5C,kBAAC,IAAD,CAAK9B,MAAM,cAEX,yBAAKL,MAAO,CAAE0C,OAAQ,MACrBJ,EAAMZ,KAAI,gBAAGtB,EAAH,EAAGA,KAAH,OAAc,EAAKD,WAAWC,Q,GAjGzBuC,IAAMC,WAuGfjD,YAEf,IAAMM,EAAS,CACbY,OAAQ,CACNI,UAAWC,YAAO,GAClBE,aAAcF,YAAO,MAIvBG,YAAa,CACXwB,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,SAAU,QAEZpB,QAAS,CACPiB,QAAS,OAETI,WAAY,EACZF,WAAY,SACZL,OAAQ,GACR3B,SAAU,GACVL,MAAO,uBACPwC,gBAAiB,kBACjBC,aAAc,GACdC,YAAa,EACbC,aAAc,GAEhBnD,OAAQ,CACNoD,YAAa,GACbvC,SAAU,GACVL,MAAO,mBAETS,YAAa,CACXuB,OAAQ,EACRa,MAAO,OACPN,WAAY,MACZhC,UAAW,OACXiC,gBAAiB,qBAIRM,EAAS","file":"component---src-pages-index-js-82aca5c26f27d3336973.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n  renderWriter(model) {\n    if (\n      !model ||\n      !model.description ||\n      !model.type ||\n      model.type !== \"reading\"\n    ) {\n      return null\n    } else {\n      return <span style={styles.writer}>{model.description + \"    |\"}</span>\n    }\n  }\n  renderPost(node) {\n    const title = node.frontmatter.title || node.fields.slug\n    if(node.frontmatter.type == \"photo\"){\n      return (\n        <Link\n          style={{ boxShadow: `none`, color: \"var(--titleText)\" }}\n          to={node.fields.slug}\n        >\n        <article key={node.fields.slug}>\n          <header style={styles.header}>\n            <img src={node.frontmatter.description}/>\n          </header>\n          <p style={{\n            fontSize: 14,\n            color: \"var(--contentText)\",\n            fontWeight: \"var(--light)\",\n            marginTop: rhythm(1 / 3),\n          }}>\n            {title}\n          </p>\n          <div style={styles.articleLine} />\n        </article>\n        </Link>\n      )\n    }else{\n      return (\n        <article key={node.fields.slug}>\n          <header style={styles.header}>\n            <h4\n              style={{\n                marginBottom: rhythm(1 / 4),\n                fontSize: \"var(--h3Size)\",\n                fontWeight: \"var(--medium)\",\n              }}\n            >\n              <Link\n                style={{ boxShadow: `none`, color: \"var(--titleText)\" }}\n                to={node.fields.slug}\n              >\n                {title}\n              </Link>\n            </h4>\n            <div style={styles.articleInfo}>\n              {this.renderWriter(node.frontmatter)}\n              <small style={{ color: \"var(--descText)\" }}>\n                {node.frontmatter.date}\n              </small>\n              {\n                node.frontmatter.tags && node.frontmatter.tags.length>0 && node.frontmatter.tags.map(tag => (\n                  <div style={styles.tagBody}>{tag}</div>\n                ))\n              }\n            </div>\n          </header>\n          {node.frontmatter.type !== \"reading\" && (\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n                style={{\n                  fontSize: 14,\n                  color: \"var(--contentText)\",\n                  fontWeight: \"var(--light)\",\n                  marginTop: rhythm(1 / 3),\n                }}\n              />\n            </section>\n          )}\n          <div style={styles.articleLine} />\n        </article>\n      )\n    }\n  }\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        {/*<Bio />*/}\n        <div style={{ height: 80 }} />\n        {posts.map(({ node }) => this.renderPost(node))}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nconst styles = {\n  header: {\n    marginTop: rhythm(1),\n    marginBottom: rhythm(1 / 4),\n  },\n\n\n  articleInfo: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    flexWrap: 'wrap',\n  },\n  tagBody: {\n    display: \"flex\",\n    // flex:0,\n    marginLeft: 8,\n    alignItems: \"center\",\n    height: 15,\n    fontSize: 12,\n    color: \"var(--transportText)\",\n    backgroundColor: \"var(--descText)\",\n    borderRadius: 10,\n    paddingLeft: 6,\n    paddingRight: 6,\n  },\n  writer: {\n    marginRight: 10,\n    fontSize: 12,\n    color: \"var(--descText)\",\n  },\n  articleLine: {\n    height: 1,\n    width: \"106%\",\n    marginLeft: \"-3%\",\n    marginTop: \"40px\",\n    backgroundColor: \"var(--lineColor)\",\n  },\n}\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { lock: { ne: true } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            tags\n            type\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}