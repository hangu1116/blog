{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","style","display","flexDirection","paddingTop","alignItems","fontSize","color","height","width","borderRadius","backgroundColor","justifyContent","marginLeft","fontWeight","lineHeight","map","node","slug","fields","title","frontmatter","key","to","pageQuery"],"mappings":"4FAAA,kGA2FeA,UAtFF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAS,KAAQJ,EACvB,OACE,kBAAC,IAAD,KACE,yBACEK,MAAO,CACLC,QAAS,OACTC,cAAe,MACfC,WAAY,GACZC,WAAY,WAGd,0BACEJ,MAAO,CACLK,SAAU,GACVJ,QAAS,OACTK,MAAO,qBAGRP,GAEH,yBACEC,MAAO,CACLC,QAAS,OACTM,OAAQ,OACRC,MAAO,OACPC,aAAc,OACdC,gBAAiB,UACjBC,eAAgB,SAChBP,WAAY,SACZQ,WAAY,QAGd,0BACEZ,MAAO,CACLC,QAAS,OACTK,MAAO,UACPO,WAAY,MACZC,WAAY,OACZT,SAAU,SAGXP,KAIP,6BACGD,EAAMkB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAE,EAAUH,EAAKI,YAAfD,MACR,OACE,uBAAGE,IAAKJ,GACN,kBAAC,OAAD,CAAMK,GAAIL,GAAOE,UAiCxB,IAAMI,EAAS","file":"component---src-templates-tags-js-c13da395f23f083619e6.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `# ${tag}`\n  return (\n    <Layout>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          paddingTop: 48,\n          alignItems: \"center\",\n        }}\n      >\n        <span\n          style={{\n            fontSize: 24,\n            display: \"flex\",\n            color: \"var(--titleText)\",\n          }}\n        >\n          {tagHeader}\n        </span>\n        <div\n          style={{\n            display: \"flex\",\n            height: \"22px\",\n            width: \"22px\",\n            borderRadius: \"11px\",\n            backgroundColor: \"#b3d7ff\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginLeft: \"8px\",\n          }}\n        >\n          <span\n            style={{\n              display: \"flex\",\n              color: \"#187bff\",\n              fontWeight: \"500\",\n              lineHeight: \"16px\",\n              fontSize: \"16px\",\n            }}\n          >\n            {totalCount}\n          </span>\n        </div>\n      </div>\n      <div>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <p key={slug}>\n              <Link to={slug}>{title}</Link>\n            </p>\n          )\n        })}\n      </div>\n\n      {/*<Link to=\"/tags\">All tags</Link>*/}\n    </Layout>\n  )\n}\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\nexport default Tags\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, lock: { ne: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}