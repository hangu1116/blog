{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","renderTags","tags","length","style","styles","articleInfo","map","tag","tagBody","renderWriter","model","description","type","writer","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","location","height","node","frontmatter","fields","slug","key","marginBottom","rhythm","fontSize","fontWeight","boxShadow","color","to","date","dangerouslySetInnerHTML","__html","excerpt","marginTop","articleLine","React","Component","display","flexDirection","alignItems","marginLeft","backgroundColor","borderRadius","paddingLeft","paddingRight","marginRight","width","pageQuery"],"mappings":"yNAOMA,E,wLACJC,WAAA,SAAWC,GAGT,OAAIA,GAAsB,IAAdA,EAAKC,OAIb,yBAAKC,MAAOC,EAAOC,aAEfJ,EAAKK,KAAI,SAAAC,GAAG,OACV,yBAAKJ,MAAOC,EAAOI,SAAUD,OAN9B,M,EAaXE,aAAA,SAAaC,GAGX,OAAIA,GAAUA,EAAMC,aAAgBD,EAAME,MAAqB,YAAbF,EAAME,KAIpD,0BAAMT,MAAOC,EAAOS,QAASH,EAAMC,YAAY,SAH1C,M,EAOXG,OAAA,WAAU,IAAD,OACCC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAM,cAEX,yBAAKlB,MAAO,CAACuB,OAAO,MACnBJ,EAAMhB,KAAI,YAAe,IAAZqB,EAAW,EAAXA,KACNN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACE3B,MAAO,CACL6B,aAAcC,YAAO,KACrBC,SAAU,gBACVC,WAAW,kBAGb,kBAAC,OAAD,CAAMhC,MAAO,CAAEiC,UAAU,OAASC,MAAM,oBAAsBC,GAAIX,EAAKE,OAAOC,MAC3ET,IAGL,yBAAKlB,MAAOC,EAAOC,aAEf,EAAKI,aAAakB,EAAKC,aAEzB,2BAAOzB,MAAO,CAACkC,MAAM,oBAAqBV,EAAKC,YAAYW,MAEzD,EAAKvC,WAAW2B,EAAKC,YAAY3B,QAKb,YAAxB0B,EAAKC,YAAYhB,MACjB,iCACE,uBACE4B,wBAAyB,CACvBC,OAAQd,EAAKC,YAAYjB,aAAegB,EAAKe,SAE/CvC,MAAO,CAAC+B,SAAS,GAAIG,MAAM,qBAAsBF,WAAW,eAAeQ,UAAUV,YAAO,EAAE,OAIpG,yBAAK9B,MAAOC,EAAOwC,oB,GA5ETC,IAAMC,WAqFf/C,YAEf,IAAMK,EAAS,CACbC,YAAY,CACV0C,QAAQ,OACRC,cAAc,MACdC,WAAW,UAEbzC,QAAQ,CACNuC,QAAQ,OAERG,WAAW,EACXD,WAAW,SACXvB,OAAO,GACPQ,SAAS,GACTG,MAAO,uBACPc,gBAAiB,kBACjBC,aAAa,GACbC,YAAY,EACZC,aAAa,GAEfzC,OAAO,CACL0C,YAAY,GACZrB,SAAS,GACTG,MAAO,mBAETO,YAAY,CACVlB,OAAO,EACP8B,MAAM,OACNN,WAAY,MACZP,UAAU,OACVQ,gBAAiB,qBAIRM,EAAS","file":"component---src-pages-index-js-3d575247419b5a927719.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n  renderTags(tags) {\n    // console.log(tags);\n    // debugger;\n    if(!tags || tags.length===0){\n      return null;\n    }else{\n      return (\n        <div style={styles.articleInfo}>\n          {\n            tags.map(tag => (\n              <div style={styles.tagBody}>{tag}</div>\n            ))\n          }\n        </div>\n      )\n    }\n  }\n  renderWriter(model) {\n    // console.log(tags);\n    // debugger;\n    if(!model || !model.description || !model.type || model.type!=='reading'){\n      return null;\n    }else{\n      return (\n        <span style={styles.writer}>{model.description+'    |'}</span>\n      )\n    }\n  }\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        {/*<Bio />*/}\n        <div style={{height:80}}/>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h4\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                    fontSize: 'var(--h3Size)',\n                    fontWeight:'var(--medium)',\n                  }}\n                >\n                  <Link style={{ boxShadow: `none`, color:'var(--titleText)' }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h4>\n                <div style={styles.articleInfo}>\n                  {\n                    this.renderWriter(node.frontmatter)\n                  }\n                  <small style={{color:'var(--descText)'}}>{node.frontmatter.date}</small>\n                  {\n                    this.renderTags(node.frontmatter.tags)\n                  }\n                </div>\n              </header>\n              {\n                node.frontmatter.type!=='reading'&&\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.description || node.excerpt,\n                    }}\n                    style={{fontSize:14, color:'var(--contentText)', fontWeight:'var(--light)',marginTop:rhythm(1/3)}}\n                  />\n                </section>\n              }\n              <div style={styles.articleLine} />\n            </article>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nconst styles = {\n  articleInfo:{\n    display:'flex',\n    flexDirection:'row',\n    alignItems:'center',\n  },\n  tagBody:{\n    display:'flex',\n    // flex:0,\n    marginLeft:8,\n    alignItems:'center',\n    height:15,\n    fontSize:12,\n    color: 'var(--transportText)',\n    backgroundColor: 'var(--descText)',\n    borderRadius:10,\n    paddingLeft:6,\n    paddingRight:6,\n  },\n  writer:{\n    marginRight:10,\n    fontSize:12,\n    color: 'var(--descText)',\n  },\n  articleLine:{\n    height:1,\n    width:'106%',\n    marginLeft: '-3%',\n    marginTop:'40px',\n    backgroundColor: 'var(--lineColor)',\n  },\n}\n\nexport const pageQuery = graphql`\n  {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}, filter: {frontmatter: {lock: {ne: true}}}) {\n    edges {\n      node {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          tags\n          type\n          description\n        }\n      }\n    }\n  }\n}\n`"],"sourceRoot":""}